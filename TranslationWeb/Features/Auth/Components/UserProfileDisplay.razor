@using Microsoft.AspNetCore.Components.Authorization
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<AuthorizeView>
    <Authorized>
        <div class="dropdown">
            <button class="btn btn-outline-secondary dropdown-toggle rounded-pill" type="button" id="userDropdown" data-bs-toggle="dropdown" aria-expanded="false" >
                <i class="bi bi-person-circle me-1"></i>
                @context.User.Identity?.Name
            </button>
            <ul class="dropdown-menu dropdown-menu-end rounded-4 shadow-sm border-0" aria-labelledby="userDropdown">
                <li><a class="dropdown-item rounded-3" href="profile"><i class="bi bi-person me-2"></i>Hồ sơ</a></li>
                <li><a class="dropdown-item rounded-3" href="settings"><i class="bi bi-gear me-2"></i>Cài đặt</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><button class="dropdown-item rounded-3 text-danger" @onclick="Logout"><i class="bi bi-box-arrow-right me-2"></i>Đăng xuất</button></li>
            </ul>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="d-flex">
            <a href="auth/login" class="btn btn-outline-secondary rounded-pill me-2">Đăng nhập</a>
            <a href="auth/register" class="btn btn-dark rounded-pill">Đăng ký</a>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task Logout()
    {
        try
        {
            await AuthService.LogoutAsync();
            NavigationManager.NavigateTo("/", true);
        }
        catch (Exception)
        {
            // Xử lý lỗi nếu cần
        }
    }
} 